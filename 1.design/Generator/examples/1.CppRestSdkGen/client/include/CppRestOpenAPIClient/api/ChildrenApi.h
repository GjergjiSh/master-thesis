/**
 * Family API
 * Basic API Specification
 *
 * The version of the OpenAPI document: 1
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.0.0-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * ChildrenApi.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_API_ChildrenApi_H_
#define ORG_OPENAPITOOLS_CLIENT_API_ChildrenApi_H_



#include "CppRestOpenAPIClient/ApiClient.h"

#include "CppRestOpenAPIClient/model/Child.h"
#include <vector>
#include <cpprest/details/basic_types.h>
#include <boost/optional.hpp>

namespace org {
namespace openapitools {
namespace client {
namespace api {

using namespace org::openapitools::client::model;



class  ChildrenApi 
{
public:

    explicit ChildrenApi( std::shared_ptr<const ApiClient> apiClient );

    virtual ~ChildrenApi();

    /// <summary>
    /// Deletes the child with the provided id
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="cid">Child id</param>
    pplx::task<void> childrenCidDelete(
        int32_t cid
    ) const;
    /// <summary>
    /// Returns the child with the provided id
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="cid">Child id</param>
    pplx::task<std::shared_ptr<Child>> childrenCidGet(
        int32_t cid
    ) const;
    /// <summary>
    /// Updates the child with the provided id
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="cid">Child id</param>
    pplx::task<std::shared_ptr<Child>> childrenCidPut(
        int32_t cid
    ) const;
    /// <summary>
    /// Returns all available children
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    pplx::task<std::vector<std::shared_ptr<Child>>> childrenGet(
    ) const;
    /// <summary>
    /// Adds a new child
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="child"> (optional)</param>
    pplx::task<void> childrenPost(
        boost::optional<std::shared_ptr<Child>> child
    ) const;

protected:
    std::shared_ptr<const ApiClient> m_ApiClient;
};

}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_API_ChildrenApi_H_ */

